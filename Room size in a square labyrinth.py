# Требуется вычислить площадь комнаты в квадратном лабиринте.
# В первой строке  вводится число N – размер лабиринта (3 <= N <= 10).
# В следующих N строках задан лабиринт (‘.’ – пустая клетка, ‘*’ – стенка).
# И наконец, последняя строка содержит  два числа – номер строки и столбца клетки,
# находящейся в комнате, площадь которой необходимо вычислить. Гарантируется,
# что эта клетка пустая и что лабиринт окружен стенками со всех сторон.
# Требуется вывести единственное число – количество пустых клеток в данной комнате.
# Пример
# входные данные
# 5
# *****
# **..*
# *.*.*
# *..**
# *****
# 2 4
# выходные данные
# 3

n = int(input("Введите размер лабиринта:\n"))

print("Введите данные о планировке лабиринта построчно:")
A = [[s for s in input()] for j in range(n)]

print("Введите координаты клетки лабиринта (в одну строку через пробел):")

x, y = (int(s) - 1 for s in input().split())

count = 0

# Перебираем клетки столбца от заданной координаты в обратном порядке к началу.
# Посчитанные точки заменяем слэшами. Останавливаемся при нахождении *
for i in range(x, -1, -1):
    if A[i][y] == ".":
        count += 1
        A[i][y] = "/"
        # На каждой строке, где была учтенная точка, аналогично пересчитываем
        # соседние точки по направлению к началу и к концу строки.
        for j in range(y, -1, -1):
            if A[i][j] == ".":
                count += 1
                A[i][j] = "/"
            if A[i][j] == "*":
                break
        for z in range(y, n):
            if A[i][z] == ".":
                count += 1
                A[i][z] = "/"
            if A[i][z] == "*":
                break
    if A[i][y] == "*":
        break

# Перебираем клетки столбца от заданной координаты к концу.
# Посчитанные точки заменяем слэшами. Останавливаемся при нахождении *
for i in range(x, n):
    if A[i][y] == ".":
        count += 1
        A[i][y] = "/"
        # На каждой строке, где была учтенная точка, аналогично пересчитываем
        # соседние точки по направлению к началу и к концу строки.
        for j in range(y, -1, -1):
            if A[i][j] == ".":
                count += 1
                A[i][j] = "/"
            if A[i][j] == "*":
                break
        for z in range(y, n):
            if A[i][z] == ".":
                count += 1
                A[i][z] = "/"
            if A[i][z] == "*":
                break
    if A[i][y] == "*":
        break

# Еще раз проходим по элементам массива, т.к. П-образные комнаты не полностью измеряются
# предыдущими действиями.
for i in range(n):
    for j in range(n):
        if A[i][j] == "/":
            for z in range(i, -1, -1):
                if A[z][j] == ".":
                    count += 1
                    A[z][j] = "/"
                if A[z][j] == "*":
                    break
            for d in range(i, n):
                if A[d][j] == ".":
                    count += 1
                    A[d][j] = "/"
                if A[d][j] == "*":
                    break

print(count)

# Выводим весь массив, проверяем, что все точки посчитаны правильно.
for row in A:
    for el in row:
        print(el, end=" ")
    print()
